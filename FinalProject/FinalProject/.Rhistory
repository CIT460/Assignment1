qmap(location='united states')
qmap(location='United States')
usa_center = as.numeric(geocode("United States"))
ggmap(get_googlemap(center=usa_center, scale=2, zoom=4), extent="normal")
ggmap(get_googlemap(center=usa_center, scale=2, zoom=4), extent="normal",TRUE)
T
usa_center = as.numeric(geocode("United States"))
usa_center = as.numeric(geocode("United States"))
scale_size_continuous(range=range(happiestCities$happyScore[1]))
location<-data.frame(geocode(happyCitiesNames[1],output = latlon))
location<-data.frame(geocode(happyCitiesNames[1],output = "latlon"))
location<-data.frame(geocode(happyCitiesNames[1],output = "latlona"))
source('~/Third Year/Spring/AdvanceTopics/FinalProject/FinalScript.R')
location<-data.frame(geocode(happyCitiesNames[1],output = ("latlona"))
location<-data.frame(geocode(happyCitiesNames[1],output = ("latlona")))
USAMap +2
location<-data.frame(geocode(happyCitiesNames[1],output = ("latlona")))
for (i in 1:nrow(happiestCities)) {
2
latlon = geocode(mydata[i,1])
3
happiestCities$lon[i] = as.numeric(latlon[1])
4
happiestCities$lat[i] = as.numeric(latlon[2])
5
}
for (i in 1:nrow(happiestCities)) {
2
latlon = geocode(happiestCities[i,1])
3
happiestCities$lon[i] = as.numeric(latlon[1])
4
happiestCities$lat[i] = as.numeric(latlon[2])
5
}
for (i in 1:nrow(happiestCities)) {
2
latlon = geocode(rownames(happiestCities[i]))
3
happiestCities$lon[i] = as.numeric(latlon[1])
4
happiestCities$lat[i] = as.numeric(latlon[2])
5
}
View(latlon)
for (i in 1:nrow(happiestCities)) {
latlon = geocode(rownames(happiestCities[i]))
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
View(happiestCities)
View(happiestCities)
View(latlon)
happiestCities$cityNames <- rownames(happiestCities)
for (i in 1:nrow(happiestCities)) {
latlon = geocode(rownames(happiestCities[i,10]))
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
for (i in 1:nrow(happiestCities)) {
latlon = geocode(rownames(happiestCities[i,10]))
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
happiestCities$cityNames <- as.character(happiestCities$cityNames)
for (i in 1:nrow(happiestCities)) {
latlon = geocode(rownames(happiestCities[i,10]))
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
happiestCities$cityNames[2]< as.character("D.C.")
happiestCities$cityNames[2]<- as.character("D.C.")
for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
happiestCities$cityNames[1]<- as.character("Florida")
for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
happiestCities$cityNames[1]<- as.character("olando florida")
for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
happiestCities$cityNames[1]<- as.character("olando florida")
happiestCities$cityNames[1]<- as.character("olando florida")for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
happiestCities$cityNames[6]<- as.character("boston massachusetts")
happiestCities$cityNames[7]<- as.character("los angeles california")
for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
happiestCities$cityNames[13]<- as.character("seattle washinton")
happiestCities$cityNames[3]<- as.character("tampa florida")
happiestCities$cityNames[7]<- as.character("los angeles california")
for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
happiestCities$cityNames[2]<- as.character("washinton dc")
happiestCities$cityNames[6]<- as.character("boston massachusetts")
happiestCities$cityNames[6]<- as.character("boston massachusetts")
happiestCities$cityNames[1]<- as.character("atlanta georgia")
for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
happiestCities$cityNames[1]<- as.character("cleveland ohio")
happiestCities$cityNames[1]<- as.character("orlando florida")
happiestCities$cityNames[9]<- as.character("atlanta georgia")
happiestCities$cityNames[13]<- as.character("cleveland ohio")
for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
happiestCities$cityNames[20]<- as.character("cleveland ohio")
for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
happiestCities$lon <- NULL
happiestCities$lat <- NULL
for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
for (i in 1:nrow(happiestCities)) {
latlon = geocode(happiestCities[i,10])
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
}
latlon = geocode(orland florida])
latlon = geocode(orland florida)
latlon = geocode(orland)
latlon = geocode(orlando florida)
latlon = geocode(orlando, florida)
latlon = geocode(loaction = (orlando ))
happiestCities$lon[i] = as.numeric(latlon[1])
happiestCities$lat[i] = as.numeric(latlon[2])
happiestCities$lon[1] = as.numeric(latlon[1])
happiestCities$lat[1] = as.numeric(latlon[2])
latlon = geocode(loaction = (new orleans))
latlon = geocode(loaction = (New Orleans))
latlon = geocode(loaction = (New Orleans))
latlon = geocode(loaction = (Louisana))
latlon = geocode(loaction = louisiana)
happiestCities$lon[1] = as.numeric(28.526956 )
happiestCities$lat[1] = as.numeric(-81.374685)
happiestCities$lon[5] = as.numeric(29.990707)
happiestCities$lat[5] = as.numeric(, -90.041534)
happiestCities$lat[5] = as.numeric(-90.041534)
latlon = geocode(boston massachusetts)
latlon = geocode(boston)
latlon = geocode(massachusetts)
happiestCities$lon[6] = as.numeric(42.336729)
happiestCities$lat[6] = as.numeric(-71.061275)
happiestCities$lon[7] = as.numeric(34.015608)
happiestCities$lat[7] = as.numeric(-118.318395)
happiestCities$lon[9] = as.numeric(33.764780)
happiestCities$lat[9] = as.numeric(-84.405509)
happiestCities$lon[17] = as.numeric(43.076868)
happiestCities$lat[17] = as.numeric(-87.913882)
happiestCities$lon[16] = as.numeric(44.975469)
happiestCities$lat[16] = as.numeric(-93.256682)
happiestCities$lon[15] = as.numeric(40.701314)
happiestCities$lat[15] = as.numeric(-73.919299)
happiestCities$lon[15] = as.numeric(40.588297)
happiestCities$lat[15] = as.numeric(-73.654410)
happiestCities$lon[14] = as.numeric(40.588297)
happiestCities$lat[14] = as.numeric(-73.654410)
happiestCities$lon[15] = as.numeric(40.701314)
happiestCities$lat[15] = as.numeric(-73.919299)
happiestCities$cityNames[13]<- as.character("seattle washinton")
happiestCities$lon[13] = as.numeric(47.610629)
happiestCities$lat[13] = as.numeric(-122.314608)
happiestCities$lon[11] = as.numeric(41.855899)
happiestCities$lat[11] = as.numeric(-87.716900)
happCitiesLocations = data.frame(happiestCities$happyScore, happiestCities$lon, happiestCities$lat)
View(happCitiesLocations)
View(happCitiesLocations)
happiestCities$lat[10] = as.numeric(-87.716900)
happiestCities$lon[10] = as.numeric(41.855899)
happiestCities$lon[11] = as.numeric(39.130076)
happiestCities$lat[11] = as.numeric(-94.739511)
happCitiesLocations = data.frame(happiestCities$happyScore, happiestCities$lon, happiestCities$lat)
colnames(happCitiesLocations) = c('happyScore','lon','lat')
USAMap +2
usa_center = as.numeric(geocode("United States"))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=4), extent="normal")
USAMap +2
USAMap +2
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*circle_scale_amt) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*2) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*.2) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*.12) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*.012) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*.3) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
happiestCities$lon[18] = as.numeric(37.775762)
happiestCities$lat[18] = as.numeric(-122.179721)
happCitiesLocations = data.frame(happiestCities$happyScore, happiestCities$lon, happiestCities$lat)
colnames(happCitiesLocations) = c('happyScore','lon','lat')
usa_center = as.numeric(geocode("United States"))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=4), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*.3) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*.15) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*.18) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=1,
size=happCitiesLocations$happyScore*.18) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=8), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=.2,
size=happCitiesLocations$happyScore*.18) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap = ggmap(get_googlemap(center=usa_center, scale=5, zoom=4), extent="normal")
USAMap = ggmap(get_googlemap(center=usa_center, scale=6, zoom=4), extent="normal")
USAMap = ggmap(get_googlemap(center=usa_center, scale=4, zoom=4), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=.2,
size=happCitiesLocations$happyScore*.18) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap = ggmap(get_googlemap(center=usa_center, scale=1, zoom=4), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=.2,
size=happCitiesLocations$happyScore*.18) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
happiestCities$lon[1] = as.numeric(-81.37468)
happiestCities$lat[1] = as.numeric(28.538335)
happiestCities$lon[1] = as.numeric(-90.07153)
happiestCities$lat[1] = as.numeric(29.951066)
happiestCities$lon[1] = as.numeric(-90.07153)
happiestCities$lat[1] = as.numeric(29.951066)
happiestCities$lon[1] = as.numeric(-81.37468)
happiestCities$lat[1] = as.numeric(28.538335)
happiestCities$lat[5] = as.numeric(29.951066)
happiestCities$lon[5] = as.numeric(-90.07153)
happiestCities$lon[6] = as.numeric(-7105880)
happiestCities$lat[6] = as.numeric(42.360082)
happiestCities$lat[17] = as.numeric(43.076868)
happiestCities$lon[17] = as.numeric(-87.913882)
happiestCities$lat[16] = as.numeric(44.975469)
happiestCities$lon[16] = as.numeric(-93.256682)
happiestCities$lat[14] = as.numeric(40.588297)
happiestCities$lon[14] = as.numeric(-73.654410)
happiestCities$lat[15] = as.numeric(40.701314)
happiestCities$lon[15] = as.numeric(-73.919299)
happiestCities$lat[17] = as.numeric(37.80464)
happiestCities$lon[17] = as.numeric(-122.271114)
happiestCities$lat[16] = as.numeric(44.975469)
happiestCities$lon[16] = as.numeric(-93.256682)
happiestCities$lat[17] = as.numeric(43.076868)
happiestCities$lon[17] = as.numeric(-87.913882)
happiestCities$lon[18] = as.numeric(-122.271114)
happiestCities$lat[18] = as.numeric(37.80464)
happiestCities$lat[10] = as.numeric(41.87114)
happiestCities$lon[10] = as.numeric(-87.6297)
happiestCities$lat[11] = as.numeric(39.099727)
happiestCities$lon[11] = as.numeric(-94.578567)
happiestCities$lat[7] = as.numeric(34.052234)
happiestCities$lon[7] = as.numeric(-118.2436)
happiestCities$lat[9] = as.numeric(33.748995)
happiestCities$lon[9] = as.numeric(-84.387982)
happCitiesLocations = data.frame(happiestCities$happyScore, happiestCities$lon, happiestCities$lat)
colnames(happCitiesLocations) = c('happyScore','lon','lat')
usa_center = as.numeric(geocode("United States"))
USAMap = ggmap(get_googlemap(center=usa_center, scale=1, zoom=4), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=.2,
size=happCitiesLocations$happyScore*.18) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=4), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=.4,
size=happCitiesLocations$happyScore*.18) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=8), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=.4,
size=happCitiesLocations$happyScore*.18) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=2), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=.4,
size=happCitiesLocations$happyScore*.18) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=2), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=.4,
size=happCitiesLocations$happyScore*.18) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=1), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=.4,
size=happCitiesLocations$happyScore*.18) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=4), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=.4,
size=happCitiesLocations$happyScore*.18) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=4), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=.4,
size=happCitiesLocations$happyScore*.18) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap = ggmap(get_googlemap(center=usa_center, scale=4, zoom=4), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=.4,
size=happCitiesLocations$happyScore*.18) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=4), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=.4,
size=happCitiesLocations$happyScore*.5) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*.5) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
source('~/Third Year/Spring/AdvanceTopics/FinalProject/FinalScript.R')
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*.5) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
happCitiesLocations = data.frame(happiestCities$happyScore, happiestCities$lon, happiestCities$lat)
colnames(happCitiesLocations) = c('happyScore','lon','lat')
usa_center = as.numeric(geocode("United States"))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=4), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*.5) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
library(rvest)
library(stringi)
library(tidyverse)
library(readxl)
library(ggplot2)
library(ggmap)
library(rworldmap)
happCitiesLocations = data.frame(happiestCities$happyScore, happiestCities$lon, happiestCities$lat)
colnames(happCitiesLocations) = c('happyScore','lon','lat')
usa_center = as.numeric(geocode("United States"))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=4), extent="normal")
USAMap = ggmap(get_googlemap(center=usa_center, scale=2), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*.5) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap = ggmap(get_googlemap(center=usa_center), extent="normal")
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*.5) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=4))
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*.5) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=4))
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*.12) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
USAMap +
geom_point(aes(x=lon, y=lat), data=happCitiesLocations, col="orange", alpha=0.4,
size=happCitiesLocations$happyScore*.08) +
scale_size_continuous(range=range(happCitiesLocations$happyScore))
saddiesCities$cityNames <- rownames(saddiesCities)
saddiesCities$cityNames <- as.character(saddiesCities$cityNames)
for (i in 1:nrow(saddiesCities)) {
latlon = geocode(saddiesCities[i,10])
saddiesCities$lon[i] = as.numeric(latlon[1])
saddiesCities$lat[i] = as.numeric(latlon[2])
}
saddiesCities$lon[] = as.numeric(-106.4457324)
saddiesCities$lat[] = as.numeric(31.7918364)
source('~/Third Year/Spring/AdvanceTopics/FinalProject/FinalScript.R')
for (i in 1:nrow(saddiesCities)) {
latlon = geocode(saddiesCities[i,10])
saddiesCities$lon[i] = as.numeric(latlon[1])
saddiesCities$lat[i] = as.numeric(latlon[2])
}
saddiesCities$lon[8] = as.numeric(-111.8452302)
saddiesCities$lat[8] = as.numeric(33.3912649)
saddiesCities$lon[9] = as.numeric(-105.0385546)
saddiesCities$lat[9] = as.numeric(38.8758843)
saddiesCities$lon[13] = as.numeric(-119.1587741)
saddiesCities$lat[13] = as.numeric(35.3211764,)
saddiesCities$lat[13] = as.numeric(35.3211764)
sadiestCityLocations = data.frame(sadiestCityLocations$happyScore, sadiestCityLocations$lon, saddiesCities$lat)
sadiestCityLocations = data.frame(saddiesCities$happyScore, saddiesCities$lon, saddiesCities$lat)
colnames(sadiestCityLocations) = c('happyScore','lon','lat')
usa_center = as.numeric(geocode("United States"))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=4))
USAMap +
geom_point(aes(x=lon, y=lat), data=sadiestCityLocations, col="orange", alpha=0.4,
size=sadiestCityLocations$happyScore*.08) +
scale_size_continuous(range=range(sadiestCityLocations$happyScore))
df = read_excel ("CityList.xlsx")
cityDataFrame <- data.frame()
for(row in 1:nrow(df)) {
df[1,3]
city.url <- (df[row,3])
city.url<-as.character(city.url)
city.ny <- html_session(city.url)
hospital<-html_nodes(city.ny,'.hospitals') %>% html_text()
business <- city.ny %>% html_nodes('.businesses-count-table') %>% html_text()
naturalDisters <- city.ny %>% html_nodes('.natural-disasters') %>% html_text()
tourTraps <- city.ny %>% html_nodes('.article-links') %>% html_text()
police <- city.ny %>% html_nodes('.police') %>% html_text()
divorceRates <- city.ny %>% html_nodes('.marital-info') %>% html_text()
population <- city.ny  %>% html_nodes('.city-population') %>% html_text()
medianIncome<-city.ny %>% html_nodes('.median-income') %>% html_text()
hospitalData <- str_split(hospital, "\\)")[[1]]
numHospital <- as.integer(length(hospitalData)-1)
numNaturalDisasters<- str_split(naturalDisters,":")[[1]]
numNaturalDisasters <- str_split(numNaturalDisasters, "\\(")[[2]]
numNaturalDisasters <- str_split(numNaturalDisasters, "\\)")[[2]]
numNaturalDisasters <- as.integer(numNaturalDisasters[1])
dataTourTraps <- str_split(tourTraps,"\r")[[1]]
numTourTraps <- as.integer(length(dataTourTraps)-3)
policeData <- str_split(police,":")[[1]]
policeData <- str_split(policeData,"\\(")[[2]]
policeData <- str_split(policeData," ")[[2]]
numPolice <- (policeData[1])
numPolice<-trimws(numPolice, which = c("both"))
numPolice<-as.numeric(gsub(",","",numPolice))
numPolice<-as.integer(numPolice)
divorceData <- str_split(divorceRates,":")[[1]]
divorceData <- divorceData[7]
populationData <- str_split(population,":")[[1]]
populationData<- populationData[[2]]
populationData<-trimws(populationData, which = c("both"))
populationData= as.numeric(gsub(",","",populationData))
populationNum <- as.integer(populationData)
addDF= data.frame(row.names = df[row,1],populationNum,divorceData,numNaturalDisasters,numTourTraps,numPolice,numHospital)
cityDataFrame <- rbind(cityDataFrame,addDF)
}
source('~/Third Year/Spring/AdvanceTopics/FinalProject/FinalScript.R')
